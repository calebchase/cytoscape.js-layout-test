!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["cytoscape-stickynote"]=t():e["cytoscape-stickynote"]=t()}(self,(function(){return(()=>{"use strict";var e={529:(e,t,n)=>{function o(e,t){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}function i(e,t){let n=e.source().position(),i=e.target().position(),l=n.x<i.x?-1:1;t.x+=300*l;let r=(n.y-i.y)/(n.x-i.x),d=-1/r,s=i.y-r*i.x,c=t.y-d*t.x,u=(c-s)/(r-d),f=d*u+c,a=o({x:t.x,y:t.y},{x:u,y:f}),h=o(n,{x:u,y:f})/o(n,i);l*=-(f<t.y?-1:1),e.style({"segment-distances":-l*a+" ","segment-weights":`${h} `})}function l(e){for(const t in e){let n=e[t].nodes,o=e[t].parent,l=-1/0;if(!(n.length<2)){for(let e=0;e<n.length;e++)n[e].position("y")>l&&(l=n[e].position("y"));if(l!=-1/0&&n.length>1)for(let e=0;e<n.length;e++){let t=o.connectedEdges('edge[type = "segment"]');for(let o=0;o<t.length;o++)if(t[o].target().id()==n[e].id()){i(t[o],{x:n[e].position("x"),y:l});break}}}}}function r(e){e.style({"curve-style":"taxi","taxi-direction":"upward","taxi-turn":"-20"})}function d(e,t){let n=e.connectedEdges().connectedNodes(),o=t.connectedEdges().connectedNodes();return n.filter((e=>o.includes(e))).length}function s(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(var n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0}function c(e,t,n){let o={unique:[],shared:[]},i=e.$id(t).connectedEdges().connectedNodes(`${n}[_used != 'true']`);for(let e=0;e<i.length;e++)1==i[e].connectedEdges().length?(o.unique.push(i[e]),r(i[e].connectedEdges())):("true"!=i[e].data("_taxiSet")&&i[e].data("_taxiSet","true"),o.shared.push(i[e]));return o}function u(e,t,n,o){let i=Math.ceil(Math.sqrt(t.length)),l=1,r=[0,0],d=0;for(let e=0;e<t.length;e++)t[e].position({x:o.x+n.horizontalNodeOffset*d++,y:o.y+n.verticalNodeOffset*l}),(e+1)%i==0&&(l++,d=0),t[e].data("_used","true"),r[0]=Math.max(r[0],t[e].position("x")),r[1]=Math.min(r[1],t[e].position("y"));return r}function f(e){let t=[];for(let n=0;n<e.length;n++)t.push(e[n].id());return t}function a(e,t){let n=0;for(let o=0;o<e.length;o++)if(t.includes(e[o])&&n++,Math.ceil(t.length/2)==n)return e[o];return-1}function h(e,t,n){let o=f(e.connectedEdges().connectedNodes(`${n.parentQuery}[id != "${e.id()}"]`)),i=[];for(let e=0;e<t.length;e++)o.includes(t[e])&&i.push(e);return i.sort(((e,t)=>e-t))}function y(e,t,n){let o=f(e.connectedEdges().connectedNodes(`${n.parentQuery}[id != "${e.id()}"]`)),i=1e3,l=-1;for(let e=0;e<t.length;e++)o.includes(t[e])&&(i=Math.min(i,e),l=Math.max(l,e));return(l-i)/o.length}function g(e,t){if(e[0]<0||t[0]<0)return!1;for(let n=0;n<e.length;n++)for(let o=0;o<t.length-1;o++)if(e[n]>t[o]&&e[n]<t[o+1])return!0;return!1}function p(e,t){if(e[0]<0&&t[0]<0)return!1;let n=!1;for(let o=0;o<e.length-1;o++)for(let i=0;i<t.length-1;i++)e[o]<=t[i]&&e[o+1]>=t[i+1]&&(n=!0);return n}function x(e,t){if(0==e.length)return t+1;e.sort(((e,t)=>e-t));for(let n=0;n<e.length-1;n++)if(e[n+1]-e[n]>=2&&e[n]>=t)return e[n]+1;return Math.max(e[e.length-1],t)+1}function v(e,t,n){let o=!1;for(const r in e)for(let d=0;d<e[r].length;d++){if(r==t.key&&d==t.index)return o;if(s(e[t.key][t.index].range,e[r][d].range))return e[t.key][t.index].level=e[r][d].level-1,n.hit=!0,n.level=e[t.key][t.index].range,!0;i=e[t.key][t.index].range,l=e[r][d].range,i[0]==l[l.length-1]||i[i.length-1]==l[0]?e[t.key][t.index].possibleLevelUps.push(e[r][d].level):p(e[t.key][t.index].range,e[r][d].range)&&(e[t.key][t.index].level<e[r][d].level&&(e[t.key][t.index].possibleLevelUp=e[r][d].level),o=!0,e[t.key][t.index].level=Math.max(e[t.key][t.index].level,e[r][d].level))}var i,l;return o}function m(e,t){for(const o in e)for(let i=0;i<e[o].length;i++){if(o==t.key&&i==t.index)return!1;if(g(e[t.key][t.index].range,e[o][i].range))return(n=e[t.key][t.index].node.connectedEdges()).data({type:"segment"}),n.style({"curve-style":"segments","segment-distances":"0","edge-distances":"node-position"}),e[t.key][t.index].range=[-2,-1],!0}var n;return!1}function k(e){e={horizontalNodeOffset:150,verticalNodeOffset:150,parentToChildSpacing:150,horizontalSharedOffset:75,parentQuery:'node[type = "person"]',childAQuery:'node[type = "identifier"]',childBQuery:'node[type = "event"]',...e},function(e){let t=e.elements('node[_used = "true"]');for(let e=0;e<t.length;e++)t[e].data("_used","false")}(cy);let t,n,o,i=function(e,t){let n,o=e.elements(t.parentQuery),i=[],l=[],r=[],s=-1,c={};for(let e=0;e<o.length;e++){i.push(o[e].id()),c[o[e].id()]={};for(let t=0;t<o.length;t++)o[e].id()!=o[t].id()&&(c[o[e].id()][o[t].id()]=d(o[e],o[t]))}for(let e=0;e<i.length;e++){r.push(i[e]),n=0;for(let e=0;e<i.length;e++){let t,o=0;for(let n=0;n<i.length;n++)null!=r[e]&&null!=i[e]&&c[r[e]][i[n]]>o&&!r.includes(i[n])&&(o=c[r[e]][i[n]],t=i[n]);r.push(t),n+=o}n>s&&(s=n,l=r),r=[]}return l}(cy,e),s=[0,0],g=0;r(cy.edges());for(let l=0;l<i.length;l++)o=cy.$id(i[l]),t=c(cy,i[l],e.childAQuery),n=c(cy,i[l],e.childBQuery),n.unique.length>0&&(s=u(cy,n.unique,e,{x:s[0],y:0})),s[0]+=e.horizontalNodeOffset,g=Math.min(s[1],g),o.position({x:s[0],y:0}),t.unique.length>0&&(s=u(cy,t.unique,e,{x:s[0],y:0})),s[0]+=e.horizontalNodeOffset,g=Math.min(s[1],g);!function(e,t,n,o){let i={idList:t,eventMaxY:new Array(t.length).fill(0),identifierMaxY:new Array(t.length).fill(0)};for(let e=0;e<i.idList.length;e++)i[i.idList[e]]={},i[i.idList[e]].maxlevel=1;let r={};n=n.sort(((e,n)=>y(e,t,o)<y(n,t,o)?-1:1));let d=[];for(let e=0;e<n.length;e++)h(n[e],t,o).length>1&&d.push(n[e]);n=d;for(let e=0;e<n.length;e++)null==r[0]&&(r[0]=[]),r[0].push({node:n[e],range:h(n[e],t,o).sort(((e,t)=>e-t)),level:1,conflict:!1,possibleLevelUps:[]});let s=!1,c=0;for(const t in r)for(let n=0;n<r[t].length;n++){s=m(r,{key:t,index:n});let l=f(r[t][n].node.connectedEdges().connectedNodes(`${o.parentQuery}[id != "${r[t][n].node.id()}"]`)),d=a(i.idList,l);s&&(r[t][n].node.position({x:e.nodes(`node[id = "${d}"]`).position("x"),y:-o.parentToChildSpacing+-o.verticalNodeOffset*i[d].maxlevel++}),c=Math.max(c,i[d].maxlevel))}let u={};for(const t in r){let n=0;for(let l=0;l<r[t].length;l++){let d={hit:!1};s=v(r,{key:t,index:l},d),0!=d.hit&&(d=d.level.join(""),u[d]=null==u[d]?1:u[d]+1,n=u[d]),(s||r[t][l].possibleLevelUps.length>0&&!r[t][l].conflict)&&(!s&&1==r[t][l].level&&r[t][l].possibleLevelUps[0]>1||(r[t][l].level=x(r[t][l].possibleLevelUps,r[t][l].level)));let h=f(r[t][l].node.connectedEdges().connectedNodes(`${o.parentQuery}[id != "${r[t][l].node.id()}"]`)),y=a(i.idList,h);"segments"!=r[t][l].node.connectedEdges().style("curve-style")&&(r[t][l].node.position({x:e.nodes(`node[id = "${y}"]`).position("x")+o.horizontalNodeOffset+n*o.horizontalSharedOffset,y:-o.parentToChildSpacing+r[t][l].level*-o.verticalNodeOffset+c*-o.verticalNodeOffset}),s=!1),n=0}}!function(e,t){for(let n=0;n<t.length;n++){let o=e.$id(t[n]).connectedEdges('edge[type = "segment"]').connectedNodes(),i=e.$id(t[n]),r={};for(let e=0;e<o.length;e++)null==r[o[e].position("x")]&&(r[o[e].position("x")]={},r[o[e].position("x")].parent=i,r[o[e].position("x")].nodes=[]),o[e].position("x")!=i.position("x")&&r[o[e].position("x")].nodes.push(o[e]);l(r)}}(e,t)}(cy,i,cy.nodes(`${e.childAQuery}[_used != "true"], ${e.childBQuery}[_used != "true"]`),e)}function M(e){e?e("core","trilayer",k):console.warn("Attempt to register cytoscape-layoutB with invalid cytoscape instance!")}n.r(t),n.d(t,{register:()=>M}),"undefined"!=typeof cytoscape&&M(cytoscape)}},t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}return n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(529)})()}));